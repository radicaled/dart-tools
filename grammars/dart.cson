'fileTypes': [
  'dart'
]
'foldingStartMarker': '\\{\\s*$'
'foldingStopMarker': '^\\s*\\}'
'name': 'Dart'
'patterns': [
  {
    'match': '^(#!.*)$'
    'name': 'meta.preprocessor.script.dart'
  }
  {
    'begin': '\\b(library|import|part of|part|export)\\b'
    'beginCaptures':
      '0':
        'name': 'keyword.other.import.dart'
    'end': ';'
    'endCaptures':
      '0':
        'name': 'punctuation.terminator.dart'
    'name': 'meta.declaration.dart'
    'patterns': [
      {
        'include': '#strings'
      }
      {
        'match': '\\b(as|show|hide)\\b'
        'name': 'keyword.other.import.dart'
      }
    ]
  }
  {
    'include': '#comments'
  }
  {
    'include': '#annotations'
  }
  {
    'include': '#constants-and-special-vars'
  }
  {
    'include': '#keywords'
  }
  {
    'include': '#strings'
  }
]
'repository':
  # Parsing the interior of a dartdoc comment: ///{DART_DOC_INTERIOR}
  # Not a top-level component
  'dartdoc':
    'patterns': [
      {
        'match': '\\[(.*?)\\]'
        'captures':
          '1':
            'name': 'dartdoc.reference.dart'
      }
    ]
  'comments':
    'patterns': [
      {
        'captures':
          '0':
            'name': 'punctuation.definition.comment.dart'
        'match': '/\\*\\*/'
        'name': 'comment.block.empty.dart'
      }
      {
        'include': '#comments-doc-oldschool'
      }
      {
        'include': '#comments-doc'
      }
      {
        'include': 'text.html.javadoc'
      }
      {
        'include': '#comments-inline'
      }
    ]
  'comments-doc-oldschool':
    'patterns': [
      {
        'begin': '/\\*\\*'
        'end': '\\*/'
        'name': 'comment.block-dartdoc.dart'
        'patterns': [
          {
            'include': 'source.gfm'
          }
          {
            'include': '#dartdoc'
          }
        ]
      }
    ]
  'comments-doc':
    'patterns': [
      {
        'match': '(///)\\s*(.*?)$'
        'captures':
          '1':
            'name': 'comment.triple-slash.dart'
          '2':
            'name': 'source.gfm.comment.dartdoc.dart'
            'patterns': [
              {
                'include': 'source.gfm'
              }
              {
                'include': '#dartdoc'
              }
            ]
      }
    ]

  'comments-inline':
    'patterns': [
      {
        'begin': '/\\*'
        'end': '\\*/'
        'name': 'comment.block.dart'
      }
      {
        'captures':
          '1':
            'name': 'comment.line.double-slash.dart'
        'match': '((//).*)$'
      }
    ]
  'annotations':
    'patterns': [
      {
        'match': '\@[a-zA-Z]+'
        'name': 'storage.type.annotation.dart'
      }
    ]
  'constants-and-special-vars':
    'patterns': [
      {
        'match': '\\b(true|false|null)\\b'
        'name': 'constant.language.dart'
      }
      {
        'match': '\\b(this|super)\\b'
        'name': 'variable.language.dart'
      }
      {
        'match': '\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b'
        'name': 'constant.numeric.dart'
      }
      {
        'match': '\\b[A-Z][a-zA-Z]+\\b'
        'name': 'support.class.dart'
      }
      {
        'match': '(_?[a-z][a-zA-Z]+)(?=\\\(\\\[)'
        'name': 'entity.name.function.dart'
      }
      {
        'match': '\\b[A-Z_0-9]+\\b'
        'name': 'support.constant.dart'
      }
    ]
  'keywords':
    'patterns': [
      {
        'match': '\\bas\\b'
        'name': 'keyword.cast.dart'
      }
      {
        'match': '\\b(try|catch|finally|throw|rethrow)\\b'
        'name': 'keyword.control.catch-exception.dart'
      }
      {
        'match': '\\?|:'
        'name': 'keyword.control.ternary.dart'
      }
      {
        'match': '\\b(break|case|continue|default|do|else|for|if|in|return|switch|while)\\b'
        'name': 'keyword.control.dart'
      }
      {
        'match': '\\b(sync\\*|async(\\*)?|await|yield(\\*)?)'
        'name': 'keyword.control.dart'
      }
      {
        'match': '\\bassert\\b'
        'name': 'keyword.control.dart'
      }
      {
        'match': '\\b(new)\\b'
        'name': 'keyword.control.new.dart'
      }
      {
        'match': '\\b(abstract|class|enum|extends|external|factory|implements|interface|get|native|operator|set|typedef)\\b'
        'name': 'keyword.declaration.dart'
      }
      {
        'match': '\\b(is\\!?)\\b'
        'name': 'keyword.operator.dart'
      }
      {
        'match': '(<<|>>>?|~|\\^|\\||&)'
        'name': 'keyword.operator.bitwise.dart'
      }
      {
        'match': '((&|\\^|\\||<<|>>>?)=)'
        'name': 'keyword.operator.assignment.bitwise.dart'
      }
      {
        'match': '(===?|!==?|<=?|>=?)'
        'name': 'keyword.operator.comparison.dart'
      }
      {
        'match': '(([+*/%-]|\\~)=)'
        'name': 'keyword.operator.assignment.arithmetic.dart'
      }
      {
        'match': '(=)'
        'name': 'keyword.operator.assignment.dart'
      }
      {
        'match': '(\\-\\-|\\+\\+)'
        'name': 'keyword.operator.increment-decrement.dart'
      }
      {
        'match': '(\\-|\\+|\\*|\\/|\\~\\/|%)'
        'name': 'keyword.operator.arithmetic.dart'
      }
      {
        'match': '(!|&&|\\|\\|)'
        'name': 'keyword.operator.logical.dart'
      }
      {
        'match': ';'
        'name': 'punctuation.terminator.dart'
      }
      {
        'match': '\\b(static|final|const)\\b'
        'name': 'storage.modifier.dart'
      }
      {
        'match': '\\b(?:void|bool|num|int|double|Dynamic|var|String)\\b'
        'name': 'storage.type.primitive.dart'
      }
    ]
  'string-interp':
    'patterns': [
      {
        'captures':
          '2':
            'name': 'variable.parameter.dart'
          '3':
            'name': 'variable.parameter.dart'
        'match': '\\$((\\w+)|\\{(\\w+)\\})'
      }
      {
        'match': '\\\\.'
        'name': 'constant.character.escape.dart'
      }
    ]
  'strings':
    'patterns': [
      {
        'begin': '(?<!r)"""'
        'end': '"""(?!")'
        'name': 'string.interpolated.triple.double.dart'
        'patterns': [
          {
            'include': '#string-interp'
          }
        ]
      }
      {
        'begin': '(?<!r)\'\'\''
        'end': '\'\'\'(?!\')'
        'name': 'string.interpolated.triple.single.dart'
        'patterns': [
          {
            'include': '#string-interp'
          }
        ]
      }
      {
        'begin': 'r"""'
        'end': '"""(?!")'
        'name': 'string.quoted.triple.double.dart'
      }
      {
        'begin': 'r\'\'\''
        'end': '\'\'\'(?!\')'
        'name': 'string.quoted.triple.single.dart'
      }
      {
        'begin': '(?<!\\\\|r)"'
        'end': '"'
        'name': 'string.interpolated.double.dart'
        'patterns': [
          {
            'match': '\\n'
            'name': 'invalid.string.newline'
          }
          {
            'include': '#string-interp'
          }
        ]
      }
      {
        'begin': 'r"'
        'end': '"'
        'name': 'string.quoted.double.dart'
        'patterns': [
          {
            'match': '\\n'
            'name': 'invalid.string.newline'
          }
        ]
      }
      {
        'begin': '(?<!\\|r)\''
        'end': '\''
        'name': 'string.interpolated.single.dart'
        'patterns': [
          {
            'match': '\\n'
            'name': 'invalid.string.newline'
          }
          {
            'include': '#string-interp'
          }
        ]
      }
      {
        'begin': 'r\''
        'end': '\''
        'name': 'string.quoted.single.dart'
        'patterns': [
          {
            'match': '\\n'
            'name': 'invalid.string.newline'
          }
        ]
      }
    ]
'scopeName': 'source.dart'
